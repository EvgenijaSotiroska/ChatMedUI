version: '3.8'
services:
  frontend:
    build: ./frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_BASE_URL=http://backend:8080/api
    depends_on:
      - backend
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:3000/ || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build: ./backend
    restart: unless-stopped
    ports:
      - "8082:8080"
    environment:
      - SERVER_PORT=8080
      - SPRING_DATASOURCE_URL=jdbc:postgresql://database:5432/ChatMedDb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    depends_on:
      - database

  database:
    image: postgres:17.4
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ChatMedDb
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d ChatMedDb" ]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  postgres_data:
